{"ast":null,"code":"import _objectSpread from\"C:/LTMang_AI/expense_ai/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"C:/LTMang_AI/expense_ai/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16,_templateObject17,_templateObject18,_templateObject19,_templateObject20,_templateObject21;import React,{useState,useEffect}from'react';import styled from'styled-components';import{BarChart,Bar,LineChart,Line,PieChart,Pie,Cell,XAxis,YAxis,CartesianGrid,Tooltip,ResponsiveContainer,Legend}from'recharts';import{Calendar,Download,TrendingUp,DollarSign,Target,AlertCircle}from'lucide-react';import{toast}from'react-hot-toast';import api from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ReportContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  max-width: 1200px;\\n  margin: 0 auto;\\n\"])));const Header=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  margin-bottom: 2rem;\\n\"])));const Title=styled.h1(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  color: #007bff;\\n  margin-bottom: 0.5rem;\\n\"])));const Subtitle=styled.p(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  color: #6c757d;\\n  font-size: 1.1rem;\\n\"])));const FilterSection=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.95);\\n  border-radius: 15px;\\n  padding: 1.5rem;\\n  border: 2px solid #007bff;\\n  box-shadow: 0 5px 15px rgba(0, 123, 255, 0.1);\\n  margin-bottom: 2rem;\\n\"])));const FilterGrid=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: 1fr 1fr auto auto;\\n  gap: 1rem;\\n  align-items: end;\\n  \\n  @media (max-width: 768px) {\\n    grid-template-columns: 1fr;\\n  }\\n\"])));const FilterGroup=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  gap: 0.5rem;\\n\"])));const Label=styled.label(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  font-weight: 600;\\n  color: #495057;\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n\"])));const Input=styled.input(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  padding: 0.75rem;\\n  border: 2px solid #e9ecef;\\n  border-radius: 8px;\\n  font-size: 1rem;\\n  \\n  &:focus {\\n    outline: none;\\n    border-color: #007bff;\\n  }\\n\"])));const Button=styled.button(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  padding: 0.75rem 1.5rem;\\n  background: linear-gradient(45deg, #007bff, #0056b3);\\n  color: white;\\n  border: none;\\n  border-radius: 8px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n  font-weight: 600;\\n  \\n  &:hover {\\n    background: linear-gradient(45deg, #0056b3, #004085);\\n  }\\n  \\n  &.secondary {\\n    background: linear-gradient(45deg, #28a745, #1e7e34);\\n    \\n    &:hover {\\n      background: linear-gradient(45deg, #1e7e34, #155724);\\n    }\\n  }\\n\"])));const StatsGrid=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\\n  gap: 1.5rem;\\n  margin-bottom: 2rem;\\n\"])));const StatCard=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.95);\\n  border-radius: 15px;\\n  padding: 1.5rem;\\n  border: 2px solid #007bff;\\n  box-shadow: 0 5px 15px rgba(0, 123, 255, 0.1);\\n  text-align: center;\\n\"])));const StatIcon=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  width: 50px;\\n  height: 50px;\\n  border-radius: 12px;\\n  background: linear-gradient(45deg, #007bff, #0056b3);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: white;\\n  margin: 0 auto 1rem;\\n\"])));const StatValue=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  font-size: 1.8rem;\\n  font-weight: bold;\\n  color: #007bff;\\n  margin-bottom: 0.5rem;\\n\"])));const StatLabel=styled.div(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  color: #6c757d;\\n  font-size: 0.9rem;\\n\"])));const ChartsGrid=styled.div(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  gap: 2rem;\\n  margin-bottom: 2rem;\\n  \\n  @media (max-width: 768px) {\\n    grid-template-columns: 1fr;\\n  }\\n\"])));const ChartCard=styled.div(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.95);\\n  border-radius: 15px;\\n  padding: 1.5rem;\\n  border: 2px solid #007bff;\\n  box-shadow: 0 5px 15px rgba(0, 123, 255, 0.1);\\n\"])));const ChartTitle=styled.h3(_templateObject16||(_templateObject16=_taggedTemplateLiteral([\"\\n  color: #007bff;\\n  margin-bottom: 1rem;\\n  text-align: center;\\n\"])));const FullWidthChart=styled(ChartCard)(_templateObject17||(_templateObject17=_taggedTemplateLiteral([\"\\n  grid-column: 1 / -1;\\n\"])));const InsightsCard=styled.div(_templateObject18||(_templateObject18=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.95);\\n  border-radius: 15px;\\n  padding: 2rem;\\n  border: 2px solid #007bff;\\n  box-shadow: 0 5px 15px rgba(0, 123, 255, 0.1);\\n\"])));const InsightItem=styled.div(_templateObject19||(_templateObject19=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 1rem;\\n  padding: 1rem;\\n  background: rgba(0, 123, 255, 0.05);\\n  border-radius: 10px;\\n  margin-bottom: 1rem;\\n\"])));const InsightIcon=styled.div(_templateObject20||(_templateObject20=_taggedTemplateLiteral([\"\\n  color: #007bff;\\n\"])));const InsightText=styled.div(_templateObject21||(_templateObject21=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  color: #495057;\\n\"])));const COLORS=['#007bff','#28a745','#ffc107','#dc3545','#6f42c1','#fd7e14'];const ReportPage=()=>{const[dateRange,setDateRange]=useState({startDate:new Date(new Date().getFullYear(),new Date().getMonth(),1).toISOString().split('T')[0],endDate:new Date().toISOString().split('T')[0]});const[reportData,setReportData]=useState({expenses:[],categoryBreakdown:[],dailySpending:[],summary:{}});const[analysis,setAnalysis]=useState(null);const[loading,setLoading]=useState(false);useEffect(()=>{generateReport();},[]);const generateReport=async()=>{setLoading(true);try{const[expensesRes,categoryRes,dailyRes,summaryRes,analysisRes]=await Promise.all([api.getExpenses(dateRange),api.getCategoryBreakdown(),api.getDailySpending(),api.getSummary(),api.getAnalysis()]);setReportData({expenses:Array.isArray(expensesRes.data)?expensesRes.data:[],categoryBreakdown:Array.isArray(categoryRes.data)?categoryRes.data:[],dailySpending:Array.isArray(dailyRes.data)?dailyRes.data:[],summary:summaryRes.data||{}});setAnalysis(analysisRes.data);}catch(error){console.error('Error generating report:',error);toast.error('Không thể tạo báo cáo');}finally{setLoading(false);}};const exportReport=()=>{// TODO: Implement export functionality\ntoast('Chức năng xuất báo cáo sẽ được cập nhật sớm',{icon:'ℹ️'});};const formatCurrency=amount=>{return new Intl.NumberFormat('vi-VN',{style:'currency',currency:'VND'}).format(amount||0);};const getTopCategory=()=>{if(!Array.isArray(reportData.categoryBreakdown)||reportData.categoryBreakdown.length===0)return'Không có dữ liệu';const top=reportData.categoryBreakdown.reduce((max,cat)=>cat.amount>max.amount?cat:max);return top.category;};const getAverageDaily=()=>{if(!Array.isArray(reportData.dailySpending)||reportData.dailySpending.length===0)return 0;const total=reportData.dailySpending.reduce((sum,day)=>sum+day.amount,0);return total/reportData.dailySpending.length;};const getSpendingTrend=()=>{if(!Array.isArray(reportData.dailySpending)||reportData.dailySpending.length<2)return'Không đủ dữ liệu';const recent=reportData.dailySpending.slice(-7);const older=reportData.dailySpending.slice(-14,-7);if(recent.length===0||older.length===0)return'Không đủ dữ liệu';const recentAvg=recent.reduce((sum,day)=>sum+day.amount,0)/recent.length;const olderAvg=older.reduce((sum,day)=>sum+day.amount,0)/older.length;if(recentAvg>olderAvg*1.1)return'Tăng';if(recentAvg<olderAvg*0.9)return'Giảm';return'Ổn định';};return/*#__PURE__*/_jsxs(ReportContainer,{children:[/*#__PURE__*/_jsxs(Header,{children:[/*#__PURE__*/_jsx(Title,{children:\"\\uD83D\\uDCCA B\\xE1o c\\xE1o Chi ti\\xEAu\"}),/*#__PURE__*/_jsx(Subtitle,{children:\"Ph\\xE2n t\\xEDch chi ti\\u1EBFt v\\xE0 xu h\\u01B0\\u1EDBng chi ti\\xEAu c\\u1EE7a b\\u1EA1n\"})]}),/*#__PURE__*/_jsx(FilterSection,{children:/*#__PURE__*/_jsxs(FilterGrid,{children:[/*#__PURE__*/_jsxs(FilterGroup,{children:[/*#__PURE__*/_jsxs(Label,{children:[/*#__PURE__*/_jsx(Calendar,{size:16}),\"T\\u1EEB ng\\xE0y\"]}),/*#__PURE__*/_jsx(Input,{type:\"date\",value:dateRange.startDate,onChange:e=>setDateRange(prev=>_objectSpread(_objectSpread({},prev),{},{startDate:e.target.value}))})]}),/*#__PURE__*/_jsxs(FilterGroup,{children:[/*#__PURE__*/_jsxs(Label,{children:[/*#__PURE__*/_jsx(Calendar,{size:16}),\"\\u0110\\u1EBFn ng\\xE0y\"]}),/*#__PURE__*/_jsx(Input,{type:\"date\",value:dateRange.endDate,onChange:e=>setDateRange(prev=>_objectSpread(_objectSpread({},prev),{},{endDate:e.target.value}))})]}),/*#__PURE__*/_jsxs(Button,{onClick:generateReport,disabled:loading,children:[/*#__PURE__*/_jsx(TrendingUp,{size:16}),loading?'Đang tạo...':'Tạo báo cáo']}),/*#__PURE__*/_jsxs(Button,{className:\"secondary\",onClick:exportReport,children:[/*#__PURE__*/_jsx(Download,{size:16}),\"Xu\\u1EA5t b\\xE1o c\\xE1o\"]})]})}),/*#__PURE__*/_jsxs(StatsGrid,{children:[/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatIcon,{children:/*#__PURE__*/_jsx(DollarSign,{size:24})}),/*#__PURE__*/_jsx(StatValue,{children:formatCurrency(reportData.summary.total)}),/*#__PURE__*/_jsx(StatLabel,{children:\"T\\u1ED5ng chi ti\\xEAu\"})]}),/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatIcon,{children:/*#__PURE__*/_jsx(Target,{size:24})}),/*#__PURE__*/_jsx(StatValue,{children:formatCurrency(getAverageDaily())}),/*#__PURE__*/_jsx(StatLabel,{children:\"Trung b\\xECnh/ng\\xE0y\"})]}),/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatIcon,{children:/*#__PURE__*/_jsx(TrendingUp,{size:24})}),/*#__PURE__*/_jsx(StatValue,{children:getTopCategory()}),/*#__PURE__*/_jsx(StatLabel,{children:\"Danh m\\u1EE5c chi nhi\\u1EC1u nh\\u1EA5t\"})]}),/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatIcon,{children:/*#__PURE__*/_jsx(AlertCircle,{size:24})}),/*#__PURE__*/_jsx(StatValue,{children:getSpendingTrend()}),/*#__PURE__*/_jsx(StatLabel,{children:\"Xu h\\u01B0\\u1EDBng (7 ng\\xE0y g\\u1EA7n nh\\u1EA5t)\"})]})]}),/*#__PURE__*/_jsxs(ChartsGrid,{children:[/*#__PURE__*/_jsxs(ChartCard,{children:[/*#__PURE__*/_jsx(ChartTitle,{children:\"\\uD83D\\uDCCA Ph\\xE2n b\\u1ED5 theo danh m\\u1EE5c\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:reportData.categoryBreakdown,cx:\"50%\",cy:\"50%\",labelLine:false,label:_ref=>{let{category,percent}=_ref;return\"\".concat(category,\" \").concat((percent*100).toFixed(0),\"%\");},outerRadius:80,fill:\"#8884d8\",dataKey:\"amount\",children:reportData.categoryBreakdown.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:COLORS[index%COLORS.length]},\"cell-\".concat(index)))}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>formatCurrency(value)})]})})]}),/*#__PURE__*/_jsxs(ChartCard,{children:[/*#__PURE__*/_jsx(ChartTitle,{children:\"\\uD83D\\uDCC8 Chi ti\\xEAu theo danh m\\u1EE5c\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:reportData.categoryBreakdown,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"category\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>formatCurrency(value)}),/*#__PURE__*/_jsx(Bar,{dataKey:\"amount\",fill:\"#007bff\"})]})})]})]}),/*#__PURE__*/_jsxs(FullWidthChart,{children:[/*#__PURE__*/_jsx(ChartTitle,{children:\"\\uD83D\\uDCC5 Xu h\\u01B0\\u1EDBng chi ti\\xEAu theo th\\u1EDDi gian\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:400,children:/*#__PURE__*/_jsxs(LineChart,{data:reportData.dailySpending,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>formatCurrency(value)}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"amount\",stroke:\"#007bff\",strokeWidth:2,dot:{fill:'#007bff',strokeWidth:2,r:4},name:\"Chi ti\\xEAu h\\xE0ng ng\\xE0y\"})]})})]}),analysis&&/*#__PURE__*/_jsxs(InsightsCard,{children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'#007bff',marginBottom:'1.5rem'},children:\"\\uD83E\\uDD16 Ph\\xE2n t\\xEDch AI\"}),/*#__PURE__*/_jsxs(InsightItem,{children:[/*#__PURE__*/_jsx(InsightIcon,{children:/*#__PURE__*/_jsx(TrendingUp,{size:20})}),/*#__PURE__*/_jsxs(InsightText,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Xu h\\u01B0\\u1EDBng chi ti\\xEAu:\"}),\" \",analysis.spending_pattern||'Đang phân tích...']})]}),/*#__PURE__*/_jsxs(InsightItem,{children:[/*#__PURE__*/_jsx(InsightIcon,{children:/*#__PURE__*/_jsx(Target,{size:20})}),/*#__PURE__*/_jsxs(InsightText,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"D\\u1EF1 \\u0111o\\xE1n tu\\u1EA7n t\\u1EDBi:\"}),\" \",analysis.prediction||'Đang tính toán...']})]}),/*#__PURE__*/_jsxs(InsightItem,{children:[/*#__PURE__*/_jsx(InsightIcon,{children:/*#__PURE__*/_jsx(DollarSign,{size:20})}),/*#__PURE__*/_jsxs(InsightText,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"G\\u1EE3i \\xFD ti\\u1EBFt ki\\u1EC7m:\"}),\" \",analysis.savings_tips||'Đang tạo gợi ý...']})]})]})]});};export default ReportPage;","map":{"version":3,"names":["React","useState","useEffect","styled","BarChart","Bar","LineChart","Line","PieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","Calendar","Download","TrendingUp","DollarSign","Target","AlertCircle","toast","api","jsx","_jsx","jsxs","_jsxs","ReportContainer","div","_templateObject","_taggedTemplateLiteral","Header","_templateObject2","Title","h1","_templateObject3","Subtitle","p","_templateObject4","FilterSection","_templateObject5","FilterGrid","_templateObject6","FilterGroup","_templateObject7","Label","label","_templateObject8","Input","input","_templateObject9","Button","button","_templateObject0","StatsGrid","_templateObject1","StatCard","_templateObject10","StatIcon","_templateObject11","StatValue","_templateObject12","StatLabel","_templateObject13","ChartsGrid","_templateObject14","ChartCard","_templateObject15","ChartTitle","h3","_templateObject16","FullWidthChart","_templateObject17","InsightsCard","_templateObject18","InsightItem","_templateObject19","InsightIcon","_templateObject20","InsightText","_templateObject21","COLORS","ReportPage","dateRange","setDateRange","startDate","Date","getFullYear","getMonth","toISOString","split","endDate","reportData","setReportData","expenses","categoryBreakdown","dailySpending","summary","analysis","setAnalysis","loading","setLoading","generateReport","expensesRes","categoryRes","dailyRes","summaryRes","analysisRes","Promise","all","getExpenses","getCategoryBreakdown","getDailySpending","getSummary","getAnalysis","Array","isArray","data","error","console","exportReport","icon","formatCurrency","amount","Intl","NumberFormat","style","currency","format","getTopCategory","length","top","reduce","max","cat","category","getAverageDaily","total","sum","day","getSpendingTrend","recent","slice","older","recentAvg","olderAvg","children","size","type","value","onChange","e","prev","_objectSpread","target","onClick","disabled","className","width","height","cx","cy","labelLine","_ref","percent","concat","toFixed","outerRadius","fill","dataKey","map","entry","index","formatter","strokeDasharray","stroke","strokeWidth","dot","r","name","color","marginBottom","spending_pattern","prediction","savings_tips"],"sources":["C:/LTMang_AI/expense_ai/frontend/src/pages/ReportPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BarChart, Bar, LineChart, Line, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\r\nimport { Calendar, Download, TrendingUp, DollarSign, Target, AlertCircle } from 'lucide-react';\r\nimport { toast } from 'react-hot-toast';\r\nimport api from '../services/api';\r\n\r\nconst ReportContainer = styled.div`\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: #007bff;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nconst Subtitle = styled.p`\r\n  color: #6c757d;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst FilterSection = styled.div`\r\n  background: rgba(255, 255, 255, 0.95);\r\n  border-radius: 15px;\r\n  padding: 1.5rem;\r\n  border: 2px solid #007bff;\r\n  box-shadow: 0 5px 15px rgba(0, 123, 255, 0.1);\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst FilterGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr auto auto;\r\n  gap: 1rem;\r\n  align-items: end;\r\n  \r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst FilterGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-weight: 600;\r\n  color: #495057;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0.75rem;\r\n  border: 2px solid #e9ecef;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #007bff;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 0.75rem 1.5rem;\r\n  background: linear-gradient(45deg, #007bff, #0056b3);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  font-weight: 600;\r\n  \r\n  &:hover {\r\n    background: linear-gradient(45deg, #0056b3, #004085);\r\n  }\r\n  \r\n  &.secondary {\r\n    background: linear-gradient(45deg, #28a745, #1e7e34);\r\n    \r\n    &:hover {\r\n      background: linear-gradient(45deg, #1e7e34, #155724);\r\n    }\r\n  }\r\n`;\r\n\r\nconst StatsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 1.5rem;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst StatCard = styled.div`\r\n  background: rgba(255, 255, 255, 0.95);\r\n  border-radius: 15px;\r\n  padding: 1.5rem;\r\n  border: 2px solid #007bff;\r\n  box-shadow: 0 5px 15px rgba(0, 123, 255, 0.1);\r\n  text-align: center;\r\n`;\r\n\r\nconst StatIcon = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(45deg, #007bff, #0056b3);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  margin: 0 auto 1rem;\r\n`;\r\n\r\nconst StatValue = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n  color: #007bff;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nconst StatLabel = styled.div`\r\n  color: #6c757d;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst ChartsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 2rem;\r\n  margin-bottom: 2rem;\r\n  \r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst ChartCard = styled.div`\r\n  background: rgba(255, 255, 255, 0.95);\r\n  border-radius: 15px;\r\n  padding: 1.5rem;\r\n  border: 2px solid #007bff;\r\n  box-shadow: 0 5px 15px rgba(0, 123, 255, 0.1);\r\n`;\r\n\r\nconst ChartTitle = styled.h3`\r\n  color: #007bff;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst FullWidthChart = styled(ChartCard)`\r\n  grid-column: 1 / -1;\r\n`;\r\n\r\nconst InsightsCard = styled.div`\r\n  background: rgba(255, 255, 255, 0.95);\r\n  border-radius: 15px;\r\n  padding: 2rem;\r\n  border: 2px solid #007bff;\r\n  box-shadow: 0 5px 15px rgba(0, 123, 255, 0.1);\r\n`;\r\n\r\nconst InsightItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  padding: 1rem;\r\n  background: rgba(0, 123, 255, 0.05);\r\n  border-radius: 10px;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst InsightIcon = styled.div`\r\n  color: #007bff;\r\n`;\r\n\r\nconst InsightText = styled.div`\r\n  flex: 1;\r\n  color: #495057;\r\n`;\r\n\r\nconst COLORS = ['#007bff', '#28a745', '#ffc107', '#dc3545', '#6f42c1', '#fd7e14'];\r\n\r\nconst ReportPage = () => {\r\n  const [dateRange, setDateRange] = useState({\r\n    startDate: new Date(new Date().getFullYear(), new Date().getMonth(), 1).toISOString().split('T')[0],\r\n    endDate: new Date().toISOString().split('T')[0]\r\n  });\r\n  const [reportData, setReportData] = useState({\r\n    expenses: [],\r\n    categoryBreakdown: [],\r\n    dailySpending: [],\r\n    summary: {}\r\n  });\r\n  const [analysis, setAnalysis] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    generateReport();\r\n  }, []);\r\n\r\n  const generateReport = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [expensesRes, categoryRes, dailyRes, summaryRes, analysisRes] = await Promise.all([\r\n        api.getExpenses(dateRange),\r\n        api.getCategoryBreakdown(),\r\n        api.getDailySpending(),\r\n        api.getSummary(),\r\n        api.getAnalysis()\r\n      ]);\r\n\r\n      setReportData({\r\n        expenses: Array.isArray(expensesRes.data) ? expensesRes.data : [],\r\n        categoryBreakdown: Array.isArray(categoryRes.data) ? categoryRes.data : [],\r\n        dailySpending: Array.isArray(dailyRes.data) ? dailyRes.data : [],\r\n        summary: summaryRes.data || {}\r\n      });\r\n      setAnalysis(analysisRes.data);\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      toast.error('Không thể tạo báo cáo');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const exportReport = () => {\r\n    // TODO: Implement export functionality\r\n    toast('Chức năng xuất báo cáo sẽ được cập nhật sớm', {\r\n      icon: 'ℹ️',\r\n    });\r\n  };\r\n\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('vi-VN', {\r\n      style: 'currency',\r\n      currency: 'VND'\r\n    }).format(amount || 0);\r\n  };\r\n\r\n  const getTopCategory = () => {\r\n    if (!Array.isArray(reportData.categoryBreakdown) || reportData.categoryBreakdown.length === 0) return 'Không có dữ liệu';\r\n    const top = reportData.categoryBreakdown.reduce((max, cat) => \r\n      cat.amount > max.amount ? cat : max\r\n    );\r\n    return top.category;\r\n  };\r\n\r\n  const getAverageDaily = () => {\r\n    if (!Array.isArray(reportData.dailySpending) || reportData.dailySpending.length === 0) return 0;\r\n    const total = reportData.dailySpending.reduce((sum, day) => sum + day.amount, 0);\r\n    return total / reportData.dailySpending.length;\r\n  };\r\n\r\n  const getSpendingTrend = () => {\r\n    if (!Array.isArray(reportData.dailySpending) || reportData.dailySpending.length < 2) return 'Không đủ dữ liệu';\r\n    const recent = reportData.dailySpending.slice(-7);\r\n    const older = reportData.dailySpending.slice(-14, -7);\r\n    \r\n    if (recent.length === 0 || older.length === 0) return 'Không đủ dữ liệu';\r\n    \r\n    const recentAvg = recent.reduce((sum, day) => sum + day.amount, 0) / recent.length;\r\n    const olderAvg = older.reduce((sum, day) => sum + day.amount, 0) / older.length;\r\n    \r\n    if (recentAvg > olderAvg * 1.1) return 'Tăng';\r\n    if (recentAvg < olderAvg * 0.9) return 'Giảm';\r\n    return 'Ổn định';\r\n  };\r\n\r\n  return (\r\n    <ReportContainer>\r\n      <Header>\r\n        <Title>📊 Báo cáo Chi tiêu</Title>\r\n        <Subtitle>Phân tích chi tiết và xu hướng chi tiêu của bạn</Subtitle>\r\n      </Header>\r\n\r\n      <FilterSection>\r\n        <FilterGrid>\r\n          <FilterGroup>\r\n            <Label>\r\n              <Calendar size={16} />\r\n              Từ ngày\r\n            </Label>\r\n            <Input\r\n              type=\"date\"\r\n              value={dateRange.startDate}\r\n              onChange={(e) => setDateRange(prev => ({ ...prev, startDate: e.target.value }))}\r\n            />\r\n          </FilterGroup>\r\n\r\n          <FilterGroup>\r\n            <Label>\r\n              <Calendar size={16} />\r\n              Đến ngày\r\n            </Label>\r\n            <Input\r\n              type=\"date\"\r\n              value={dateRange.endDate}\r\n              onChange={(e) => setDateRange(prev => ({ ...prev, endDate: e.target.value }))}\r\n            />\r\n          </FilterGroup>\r\n\r\n          <Button onClick={generateReport} disabled={loading}>\r\n            <TrendingUp size={16} />\r\n            {loading ? 'Đang tạo...' : 'Tạo báo cáo'}\r\n          </Button>\r\n\r\n          <Button className=\"secondary\" onClick={exportReport}>\r\n            <Download size={16} />\r\n            Xuất báo cáo\r\n          </Button>\r\n        </FilterGrid>\r\n      </FilterSection>\r\n\r\n      <StatsGrid>\r\n        <StatCard>\r\n          <StatIcon>\r\n            <DollarSign size={24} />\r\n          </StatIcon>\r\n          <StatValue>{formatCurrency(reportData.summary.total)}</StatValue>\r\n          <StatLabel>Tổng chi tiêu</StatLabel>\r\n        </StatCard>\r\n\r\n        <StatCard>\r\n          <StatIcon>\r\n            <Target size={24} />\r\n          </StatIcon>\r\n          <StatValue>{formatCurrency(getAverageDaily())}</StatValue>\r\n          <StatLabel>Trung bình/ngày</StatLabel>\r\n        </StatCard>\r\n\r\n        <StatCard>\r\n          <StatIcon>\r\n            <TrendingUp size={24} />\r\n          </StatIcon>\r\n          <StatValue>{getTopCategory()}</StatValue>\r\n          <StatLabel>Danh mục chi nhiều nhất</StatLabel>\r\n        </StatCard>\r\n\r\n        <StatCard>\r\n          <StatIcon>\r\n            <AlertCircle size={24} />\r\n          </StatIcon>\r\n          <StatValue>{getSpendingTrend()}</StatValue>\r\n          <StatLabel>Xu hướng (7 ngày gần nhất)</StatLabel>\r\n        </StatCard>\r\n      </StatsGrid>\r\n\r\n      <ChartsGrid>\r\n        <ChartCard>\r\n          <ChartTitle>📊 Phân bổ theo danh mục</ChartTitle>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <PieChart>\r\n              <Pie\r\n                data={reportData.categoryBreakdown}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                labelLine={false}\r\n                label={({ category, percent }) => `${category} ${(percent * 100).toFixed(0)}%`}\r\n                outerRadius={80}\r\n                fill=\"#8884d8\"\r\n                dataKey=\"amount\"\r\n              >\r\n                {reportData.categoryBreakdown.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip formatter={(value) => formatCurrency(value)} />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </ChartCard>\r\n\r\n        <ChartCard>\r\n          <ChartTitle>📈 Chi tiêu theo danh mục</ChartTitle>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={reportData.categoryBreakdown}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"category\" />\r\n              <YAxis />\r\n              <Tooltip formatter={(value) => formatCurrency(value)} />\r\n              <Bar dataKey=\"amount\" fill=\"#007bff\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </ChartCard>\r\n      </ChartsGrid>\r\n\r\n      <FullWidthChart>\r\n        <ChartTitle>📅 Xu hướng chi tiêu theo thời gian</ChartTitle>\r\n        <ResponsiveContainer width=\"100%\" height={400}>\r\n          <LineChart data={reportData.dailySpending}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis />\r\n            <Tooltip formatter={(value) => formatCurrency(value)} />\r\n            <Legend />\r\n            <Line \r\n              type=\"monotone\" \r\n              dataKey=\"amount\" \r\n              stroke=\"#007bff\" \r\n              strokeWidth={2}\r\n              dot={{ fill: '#007bff', strokeWidth: 2, r: 4 }}\r\n              name=\"Chi tiêu hàng ngày\"\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </FullWidthChart>\r\n\r\n      {analysis && (\r\n        <InsightsCard>\r\n          <h3 style={{ color: '#007bff', marginBottom: '1.5rem' }}>🤖 Phân tích AI</h3>\r\n          \r\n          <InsightItem>\r\n            <InsightIcon>\r\n              <TrendingUp size={20} />\r\n            </InsightIcon>\r\n            <InsightText>\r\n              <strong>Xu hướng chi tiêu:</strong> {analysis.spending_pattern || 'Đang phân tích...'}\r\n            </InsightText>\r\n          </InsightItem>\r\n\r\n          <InsightItem>\r\n            <InsightIcon>\r\n              <Target size={20} />\r\n            </InsightIcon>\r\n            <InsightText>\r\n              <strong>Dự đoán tuần tới:</strong> {analysis.prediction || 'Đang tính toán...'}\r\n            </InsightText>\r\n          </InsightItem>\r\n\r\n          <InsightItem>\r\n            <InsightIcon>\r\n              <DollarSign size={20} />\r\n            </InsightIcon>\r\n            <InsightText>\r\n              <strong>Gợi ý tiết kiệm:</strong> {analysis.savings_tips || 'Đang tạo gợi ý...'}\r\n            </InsightText>\r\n          </InsightItem>\r\n        </InsightsCard>\r\n      )}\r\n    </ReportContainer>\r\n  );\r\n};\r\n\r\nexport default ReportPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}