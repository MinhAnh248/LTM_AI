{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.reload();\n  }\n  return Promise.reject(error);\n});\n\n// API endpoints\nconst apiService = {\n  // Expense operations\n  getExpenses: (params = {}) => api.get('/expenses', {\n    params\n  }),\n  addExpense: data => api.post('/expenses', data),\n  deleteExpense: id => api.delete(`/expenses/${id}`),\n  updateExpense: (id, data) => api.put(`/expenses/${id}`, data),\n  clearAllExpenses: () => api.delete('/expenses/clear-all'),\n  createSampleData: () => api.post('/create-sample-data'),\n  // OCR scanning\n  scanReceipt: imageFile => {\n    const formData = new FormData();\n    formData.append('image', imageFile);\n    return api.post('/scan-receipt', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  // Category prediction\n  predictCategory: description => api.post('/predict-category', {\n    description\n  }),\n  // Dashboard data\n  getSummary: () => api.get('/summary'),\n  getCategoryBreakdown: () => api.get('/category-breakdown'),\n  getDailySpending: () => api.get('/daily-spending'),\n  // Analysis\n  getAnalysis: () => api.get('/analysis'),\n  // Budget\n  getBudgets: () => api.get('/budget'),\n  setBudget: data => api.post('/budget', data),\n  // Authentication\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }),\n  register: userData => api.post('/auth/register', userData),\n  logout: () => api.post('/auth/logout'),\n  getCurrentUser: () => api.get('/auth/me'),\n  // Income operations\n  getIncomes: () => api.get('/incomes'),\n  addIncome: data => api.post('/incomes', data),\n  deleteIncome: id => api.delete(`/incomes/${id}`),\n  updateIncome: (id, data) => api.put(`/incomes/${id}`, data),\n  getIncomeSummary: () => api.get('/income-summary')\n};\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","reload","Promise","reject","apiService","getExpenses","params","get","addExpense","data","post","deleteExpense","id","delete","updateExpense","put","clearAllExpenses","createSampleData","scanReceipt","imageFile","formData","FormData","append","predictCategory","description","getSummary","getCategoryBreakdown","getDailySpending","getAnalysis","getBudgets","setBudget","login","email","password","register","userData","logout","getCurrentUser","getIncomes","addIncome","deleteIncome","updateIncome","getIncomeSummary"],"sources":["C:/LTMang_AI/expense_ai/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Handle token expiration\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.reload();\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API endpoints\r\nconst apiService = {\r\n  // Expense operations\r\n  getExpenses: (params = {}) => api.get('/expenses', { params }),\r\n  addExpense: (data) => api.post('/expenses', data),\r\n  deleteExpense: (id) => api.delete(`/expenses/${id}`),\r\n  updateExpense: (id, data) => api.put(`/expenses/${id}`, data),\r\n  clearAllExpenses: () => api.delete('/expenses/clear-all'),\r\n  createSampleData: () => api.post('/create-sample-data'),\r\n  \r\n  // OCR scanning\r\n  scanReceipt: (imageFile) => {\r\n    const formData = new FormData();\r\n    formData.append('image', imageFile);\r\n    return api.post('/scan-receipt', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n  \r\n  // Category prediction\r\n  predictCategory: (description) => api.post('/predict-category', { description }),\r\n  \r\n  // Dashboard data\r\n  getSummary: () => api.get('/summary'),\r\n  getCategoryBreakdown: () => api.get('/category-breakdown'),\r\n  getDailySpending: () => api.get('/daily-spending'),\r\n  \r\n  // Analysis\r\n  getAnalysis: () => api.get('/analysis'),\r\n  \r\n  // Budget\r\n  getBudgets: () => api.get('/budget'),\r\n  setBudget: (data) => api.post('/budget', data),\r\n  \r\n  // Authentication\r\n  login: (email, password) => api.post('/auth/login', { email, password }),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  logout: () => api.post('/auth/logout'),\r\n  getCurrentUser: () => api.get('/auth/me'),\r\n  \r\n  // Income operations\r\n  getIncomes: () => api.get('/incomes'),\r\n  addIncome: (data) => api.post('/incomes', data),\r\n  deleteIncome: (id) => api.delete(`/incomes/${id}`),\r\n  updateIncome: (id, data) => api.put(`/incomes/${id}`, data),\r\n  getIncomeSummary: () => api.get('/income-summary'),\r\n};\r\n\r\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}